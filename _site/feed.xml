<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.1.6">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2016-08-12T01:37:21-03:00</updated><id>/</id><title>Matheus Lubarino</title><subtitle>Um site mostrando o que ando apredendo por ai.</subtitle><entry><title>Trabalhando com Reflections Parte I</title><link href="/Trabalhando-com-reflections-part-1-(Field)/" rel="alternate" type="text/html" title="Trabalhando com Reflections Parte I" /><published>2016-08-12T00:00:00-03:00</published><updated>2016-08-12T00:00:00-03:00</updated><id>/Trabalhando-com-reflections-part-1-(Field)</id><content type="html" xml:base="/Trabalhando-com-reflections-part-1-(Field)/">&lt;figure&gt;
	&lt;img src=&quot;/images/reflection.jpg&quot; alt=&quot;Java Reflection&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Bom pessoal, venho aqui falar um pouco sobre Reflection, mas antes de começamos irei especificar um pouco sobre o conceito da Reflecção.&lt;/p&gt;

&lt;blockquote&gt;Reflection é a capacidade de um programa se observar (Introspecção), podendo obter informações de si mesmo e modificar sua estrutura, o paradigma de reflexão pode também ajudar na melhoria do código &lt;/blockquote&gt;

&lt;h2 id=&quot;utilizando-reflection&quot;&gt;Utilizando Reflection&lt;/h2&gt;

&lt;p&gt;Como de toda natureza de um programa o mesmo tende a crescer seja ela de forma planejada ou não, independente da forma que o mesmo cresce a gente se depara com uns métodos desse tipo.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;existeNulos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Bar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAdress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getPhone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getCellPhone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDocument&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Okay, também concordo que isso não é nenhuma grande método mas aposto que um dia ela poderá se tornar. O exemplo acima mostra que sempre que um novo atributo for adicionado na classe você vai ter que vim aqui e validar se o novo atributo é nulo.&lt;/p&gt;

&lt;p&gt;Mas Como eu disse anteriomente, a Reflection tem uma característica que é de melhoria no código, seja ela de perfomace ou/e de refactory, então se eu fosse verificar se existe algum atributo nulo com Reflection eu simplesmente implementaria isso.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;existeNulos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
 		&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clazz&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;field&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clazz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDeclaredFields&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAccessible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Erro ao ler campo&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
				
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Visivelmente meu código se tornou muito menos cansativo de ler e outro beneficio é que agora você pode validar qualquer atributo de qualquer objeto, evitando repetição de código.&lt;/p&gt;

&lt;h2 id=&quot;entendo-um-pouco-sobre-o-cdigo&quot;&gt;Entendo um pouco sobre o código&lt;/h2&gt;

&lt;p&gt;A primeiro coisa a ser feita é pegar a class do objeto passado por parâmetro&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;?&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clazz&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Logo em seguida foi feito um forEach na lista de Atributos declarados utilizando o &lt;b&gt;getDeclaredFields()&lt;/b&gt; que retornar todos atributos da classe. Caso você utilize o &lt;b&gt;getFields&lt;/b&gt; só irá ser retornados os atributos públicos.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Field&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;field&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clazz&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getDeclaredFields&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Para cada atributo eu o torno acessível para que eu possa acessar seu estado e em seguida crio um atributo do tipo &lt;b&gt;Object&lt;/b&gt; que recebe o valor do atributo, verifico se o mesmo é nulo ou não.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;n&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAccessible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;field&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;resumidamente-falando&quot;&gt;Resumidamente falando&lt;/h2&gt;
&lt;p&gt;Isso é apena o começo de uma serie de artigos que irei fazer sobre reflection abordando sobre como trabalhar com  class,fields, methods e annotation.&lt;/p&gt;

&lt;p&gt;Até a próxima pessoal e não se esqueçam de deixar seu comentário com dúvidas ou críticas !&lt;/p&gt;

&lt;h3&gt;Referências&lt;/h3&gt;
&lt;p&gt;&lt;a&gt;https://docs.oracle.com/javase/tutorial/reflect/&lt;/a&gt;&lt;/p&gt;</content><category term="Reflection" /><summary></summary></entry><entry><title>Configurando proxy no eclipse</title><link href="/Configurando-proxy-eclipse/" rel="alternate" type="text/html" title="Configurando proxy no eclipse" /><published>2016-07-28T00:00:00-03:00</published><updated>2016-07-28T00:00:00-03:00</updated><id>/Configurando-proxy-eclipse</id><content type="html" xml:base="/Configurando-proxy-eclipse/">&lt;figure&gt;
	&lt;img src=&quot;/images/eclipse-logo.png&quot; alt=&quot;Editor Config&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Algumas vezes você precisa utilizar o Marketplace para baixar um plugin para melhorar a usabilidade da sua IDE, Performace da sua aplicação ou qualquer outra coisa, mas muitas vezes você esbarra no problema de proxy da sua empresa ou até mesmo de casa e fica impossibilitado de baixar esses plugins, mas para isso existe solução e é bem simples.&lt;/p&gt;

&lt;h2 id=&quot;configurando-o-proxy&quot;&gt;Configurando o proxy&lt;/h2&gt;

&lt;p&gt;Eu estou utilizando o &lt;b&gt;Eclipse Neon&lt;/b&gt; mas acredito que não seja diferente para outras 
versões anteriores.&lt;/p&gt;

&lt;p&gt;Vá até: &lt;b&gt;Window/Preferences/General/Network Connection&lt;/b&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/images/network-connection.png&quot; alt=&quot;Janela Preference, aba Network connection&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;1° Na combobox do &lt;b&gt;Action Provider&lt;/b&gt; selecione a opção Manual&lt;br /&gt;
2° Selecione HTTP e depois Edit&lt;br /&gt;
3° Insira sua configuração de proxy e pronto&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/images/proxy-config.png&quot; alt=&quot;Configuração do proxy&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Agora você pode acessar o Marketplace e começar a baixar seus plugins.&lt;br /&gt;
Tenha um bom proveito.&lt;/p&gt;</content><category term="eclipse" /><category term="proxy" /><category term="proxy eclipse" /><category term="ide" /><summary>Algumas vezes você precisa utilizar o Marketplace para baixar um plugin para melhorar a usabilidade da sua IDE, Performace da sua aplicação ou qualquer outra coisa, mas muitas vezes você esbarra no problema de proxy da sua empresa ou até mesmo de casa e fica impossibilitado de baixar esses plugins, mas para isso existe solução e é bem simples.</summary></entry><entry><title>Utilizando EditorConfig para padronização de editor</title><link href="/Resolvendo-problemas-de-encode/" rel="alternate" type="text/html" title="Utilizando EditorConfig para padronização de editor" /><published>2016-07-25T00:00:00-03:00</published><updated>2016-07-25T00:00:00-03:00</updated><id>/Resolvendo-problemas-de-encode</id><content type="html" xml:base="/Resolvendo-problemas-de-encode/">&lt;figure&gt;
	&lt;img src=&quot;/images/editorConfig.png&quot; alt=&quot;Editor Config&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Você muito provavelmente já teve problema com o encoded ou identação trabalhando em um projeto em equipe, cada programador tem sua IDE ou Editor de Texto com suas configurações preferidas e com isso os problemas surgem, caracteres quebrados, identação por espaço ao invés de tab , identação arquivos .alguma-coisa errada. Mas para isso existe solução e aqui vou mostrar como configurar o plugin do &lt;a href=&quot;http://editorconfig.org/&quot;&gt;editorConfig&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;o-que--editorconfig&quot;&gt;O que é EditorConfig&lt;/h2&gt;

&lt;blockquote&gt;EditorConfig helps developers define and maintain consistent coding styles between different editors and IDEs.&lt;/blockquote&gt;

&lt;p&gt;Ele simplesmete é um arquivo .editorconfig que pode ser configurado com o estilo de codificação planejado pela equipe. Ele pode ser utilizado em diversos editores como por exemplo o Sublime, ATOM e IDE como o eclipse e NetBeans. Você pode conferir se o seu editor preferido oferece suporte ao editorConfig &lt;a href=&quot;http://editorconfig.org&quot;&gt; aqui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Aqui você pode ver um exemplo do arquivo de configuração minima.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;/images/editorConfigFile.png&quot; alt=&quot;Editor Config&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Você pode provisionar o arquivo para que toda a sua equipe utilize o mesmo coding style independente da configuração do editor do desenvolvedor&lt;/p&gt;

&lt;h2 id=&quot;instalando-o-editorconfig-no-eclipse&quot;&gt;Instalando o editorConfig no eclipse&lt;/h2&gt;

&lt;p&gt;Para utilizar o editorConfig no seu eclipse basta instalar o plugin que pode ser encontrado no eclipse MarketPlace.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/editorConfigMarket.png&quot; alt=&quot;Editor Config&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ou no github do projeto &lt;a href=&quot;https://github.com/ncjones/editorconfig-eclipse#readme&quot;&gt;aqui&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/editorConfigGithub.png&quot; alt=&quot;Editor Config&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;utilizando-o-editorconfig&quot;&gt;Utilizando o editorConfig&lt;/h2&gt;

&lt;p&gt;O charset que está sendo utilizado para esse tutorial será do LATIM1 para o UTF-8&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/editorCharset.png&quot; alt=&quot;Editor Config&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para começamos a utilizar o editorConfig você precisar criar um arquivo .editorconfig no root do projeto, eu irei utilizar a configuração minima.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[*]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;end_of_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lf&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;insert_final_newline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[*.{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;charset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[*.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;indent_style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tab&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;indent_style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tab&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;indent_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3&gt;Explicação&lt;/h3&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[*]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;end_of_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lf&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;insert_final_newline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Aqui informo que a configuração do editor será aplicado em todo o projeto  e que para todo fim de linha será adicionado uma nova linha.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[*.{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;charset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[*.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;indent_style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tab&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;indent_style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tab&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;indent_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Definimos a configuração do charset para os arquivos .java e .js e apenas a identação por tab para os arquivos .java.
Também defino uma configuração personalizada para o pom.xml&lt;/p&gt;

&lt;p&gt;Basta você salvar o arquivo e todo o projeto estará configurado com o coding style definido no arquivo. Caso o editor não tenha sido configurado depois de ter salvo basta formatar o projeto novamente (CTRL + SHIFT + K) no root do projeto.&lt;/p&gt;

&lt;p&gt;O editorConfig é uma ferramenta muito útil, principalmente como se trabalha em equipe a configuração também é bastante simples e personalizável onde você pode está implementado a medida das suas necessidades basta ver sua documentação.&lt;/p&gt;

&lt;p&gt;Espero que isso ajude a todos vocês.&lt;/p&gt;</content><category term="editorConfig" /><category term="programador" /><category term="editor de texto" /><category term="DevOps" /><summary>Você muito provavelmente já teve problema com o encoded ou identação trabalhando em um projeto em equipe, cada programador tem sua IDE ou Editor de Texto com suas configurações preferidas e com isso os problemas surgem, caracteres quebrados, identação por espaço ao invés de tab , identação arquivos .alguma-coisa errada. Mas para isso existe solução e aqui vou mostrar como configurar o plugin do editorConfig</summary></entry><entry><title>O Começo</title><link href="/O-Comeco/" rel="alternate" type="text/html" title="O Começo" /><published>2016-07-17T00:00:00-03:00</published><updated>2016-07-17T00:00:00-03:00</updated><id>/O-Comeco</id><content type="html" xml:base="/O-Comeco/">&lt;figure&gt;
	&lt;img src=&quot;/images/spock.jpg&quot; alt=&quot;Hello Spock&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;Bom para tudo há um começo e esse blog será o meu, a muito tempo tenho vontade de escrever um blog com o foco em T.I, compartilhando meus conhecimento e resolução de problemas que tive e irei ter.
A ideia desse blog é simplesmente compartilhar conhecimento com a comunidade, sempre tive vontade de ter um lugar para compartilhar e discuti sobre tudo ou praticamente tudo.
Eu nunca fui uma pessoa de falar longos textos tentando enrolar alguma coisa, sempre tentei ser ao máximo preciso e tentarei trazer isso para vocês, quero falar como resolver um problema de forma rápida e bastante objetiva.&lt;/p&gt;

&lt;h2 id=&quot;mais-um-blog-na-rea-de-ti&quot;&gt;Mais um blog na área de T.I…&lt;/h2&gt;
&lt;figure&gt;
	&lt;img src=&quot;/images/bean-bored.gif&quot; alt=&quot;mr. bean entediado&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;É… Eu também pensei isso antes de começar a escrever esse blog, milhares de blog na área , muita gente falando sobre linguagens, DevOps, Metodologia Ágil e tudo mais. Mas então o que eu irei escrever aqui ? Irei escrever o que mais sinto falta nos blogs. Falar do dia a dia, resolver problemas que não achamos fácil e mostrar o que ando aprendendo por ai de novo(é isso eu não iria achar em outro blog,site), pretendo trazer guias completos e não ficar preso somento a uma linguagem ou metodologia por exemplo. Quero explorar e mostrar esse mundo a todos vocês.&lt;/p&gt;

&lt;h2 id=&quot;bom-bom-ta-me-conveceu&quot;&gt;Bom, Bom, ta me conveceu.&lt;/h2&gt;
&lt;figure&gt;
	&lt;img src=&quot;/images/jim-ok.gif&quot; alt=&quot;jim carey ok&quot; /&gt;
&lt;/figure&gt;

&lt;p&gt;Bom, se eu consegui lhe convecer seja pelos gifs ou por você confiar no pouco que falei aqui, peço a vocês que me acompanhe nessa nova trajetória e que eu possa ajudar a você e também aprender com você. Farei o possível para manter o blog atualizado pelo menos com um novo artigo por semana e sempre que tiver resolvido um problema rápido tentarei atualizar aqui. Por enquato é isso pessoal.&lt;/p&gt;</content><category term="começo" /><category term="programador" /><category term="linguagens de programação" /><summary>Bom para tudo há um começo e esse blog será o meu, a muito tempo tenho vontade de escrever um blog com o foco em T.I, compartilhando meus conhecimento e resolução de problemas que tive e irei ter.
A ideia desse blog é simplesmente compartilhar conhecimento com a comunidade, sempre tive vontade de ter um lugar para compartilhar e discuti sobre tudo ou praticamente tudo.
Eu nunca fui uma pessoa de falar longos textos tentando enrolar alguma coisa, sempre tentei ser ao máximo preciso e tentarei trazer isso para vocês, quero falar como resolver um problema de forma rápida e bastante objetiva.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="{&quot;feature&quot;=&gt;&quot;o-comeco.jpg&quot;}" /></entry></feed>
